:root{
  /* your base covenant palette (keep as-is, extend gently) */
  --obsidian:#0a0a0f; --noir: #000; --gold:#D4AF37; --violet:#6B3AA0; --teal:#50C878; --silver:#C0C0C0;
}

/* universal: when Calm Mode / reduced motion is active */
.reduced-motion *{animation:none!important;transition:none!important}

/* vesica background (two luminous ellipses crossing) */
.vesica-bg{
  position:relative; isolation:isolate; background:radial-gradient(120% 80% at 30% 50%, rgba(255,255,255,.06), transparent 60%),
                                     radial-gradient(120% 80% at 70% 50%, rgba(255,255,255,.06), transparent 60%),
                                     linear-gradient(180deg, #0a0a0f 0%, #0c0c14 100%);
}
.vesica-bg::before,
.vesica-bg::after{
  content:""; position:absolute; inset:-20vh -10vw;
  background:radial-gradient(55% 40% at 35% 50%, var(--vesica-a, #ffffff0a), transparent 70%);
  mix-blend-mode: screen; opacity:.7; filter: blur(12px);
}
.vesica-bg::after{
  background:radial-gradient(55% 40% at 65% 50%, var(--vesica-b, #ffffff08), transparent 70%);
}

/* tarot overlay: ultra subtle color wash pulled from path palette */
.tarot-overlay{
  position:relative; isolation:isolate;
}
.tarot-overlay::after{
  content:""; position:absolute; inset:0;
  background: radial-gradient(120% 90% at 50% 60%,
              color-mix(in oklab, var(--path-primary, #fff) 18%, transparent),
              transparent 70%),
              radial-gradient(100% 60% at 50% 20%,
              color-mix(in oklab, var(--path-secondary, #fff) 10%, transparent),
              transparent 70%);
  pointer-events:none; mix-blend-mode: screen;
}

/* optional aurora shimmer (auto-disabled by reduced-motion) */
@keyframes auroraFloat{ 0%{transform:translateY(0)} 50%{transform:translateY(-1.2rem)} 100%{transform:translateY(0)} }
.aurora{
  position:relative;
}
.aurora::before{
  content:""; position:absolute; inset:-10% -10%;
  background: radial-gradient(120% 120% at 50% 50%, #ffffff06, transparent 60%);
  animation: auroraFloat 12s ease-in-out infinite;
}
